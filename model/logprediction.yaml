apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: log-analyzer-workflow-
spec:
  entrypoint: log-analyzer
  volumes:
  - name: workdir
    persistentVolumeClaim:
      claimName: log-analyzer-pvc
  templates:
  - name: log-analyzer
    # inputs:
    #   artifacts:
    #   - name: CODE
    #     git: 
    #       repo: https://github.com/alexmt/log-analyzer.git
    steps:
    - - name: APPLY-PVC
        template: apply-pvc
    - - name: TFJOB
        template: tfjob
    - - name: OutputTFJOB
        template: output

  - name: apply-pvc
    resource:
      action: apply
      manifest: |
        kind: PersistentVolumeClaim
        apiVersion: v1
        metadata:
          name: log-analyzer-pvc
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 1Gi

  - name: output
    container:
      volumeMounts: 
      - name: workdir
        mountPath: /mnt/vol
      image: alpine:latest
    outputs:
      artifacts:
      - name: training-logs
        path: /mnt/vol/model

  
  - name: tfjob
    resource:
      action: create
      successCondition: status.tfReplicaStatuses.Worker.succeeded > 0
      failureCondition: status.tfReplicaStatuses.Worker.failed > 0
      manifest: |
        apiVersion: kubeflow.org/v1alpha2
        kind: TFJob
        metadata:
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            blockOwnerDeletion: true
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
          labels:
            ksonnet.io/component: log-analyzer
          generateName: log-analyzer-
          namespace: default
        spec:
          tfReplicaSpecs:
            Worker:
              replicas: 1
              template:
                spec:
                  volumes:
                  - name: workdir
                    persistentVolumeClaim:
                      claimName: log-analyzer-pvc
                  containers:
                  - args: ["
                    apt-get update &&
                    apt-get install git -y &&
                    git clone https://github.com/alexmt/log-analyzer.git &&
                    cd log-analyzer/model &&
                    python3 ./train.py --input-path sample-data/logs.txt --model-dir-path /mnt/vol/model
                    "]
                    command:
                    - /bin/sh
                    - -c
                    image: tensorflow/tensorflow:latest-gpu-py3
                    name: tensorflow
                    volumeMounts: 
                    - name: workdir
                      mountPath: /mnt/vol
                    resources:
                      limits:
                        nvidia.com/gpu: "1"
                  restartPolicy: OnFailure
                  
